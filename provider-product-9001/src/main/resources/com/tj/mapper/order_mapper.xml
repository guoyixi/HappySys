<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tj.mapper.OrderMapper">

    <!--返回指定user的：（总订单数、待支付、待生效、生效中、即将过期、已过期、待评论）各项的数量  -->
    <select id="getAllOrderStatusNumByUserId" resultType="map">
        SELECT COUNT(1) order_num,
        (<include refid="getCountByUserId"></include>  AND `order_status` = 1) unpaid,

        (<include refid="getCountByUserId"></include>  AND `order_status` = 2 ) unenforced,

        (<include refid="getCountByUserId"></include> AND `order_status` = 3 AND `order_expire_time` &gt; NOW()) in_force ,

        (<include refid="getCountByUserId"></include> AND `order_status` = 3 AND DATEDIFF(`order_expire_time`,NOW()) &lt; 30
            AND `order_expire_time` &gt; NOW()) soon_expire,

        (<include refid="getCountByUserId"></include> AND `order_status` = 3  AND `order_expire_time` &lt; NOW()) expired,

        (<include refid="getCountByUserId"></include> AND `order_status` = 3 AND
            `order_id` NOT IN (SELECT `comment_order_id` FROM `happysys_comment` )) waiting_comment
        FROM `happysys_order`
        WHERE `order_user_id` = #{userId}
    </select>
    <sql id="getCountByUserId">
           SELECT COUNT(1) FROM `happysys_order`
            WHERE `order_user_id` = #{userId}
    </sql>


    <select id="getOrderByMap" resultType="map">
        SELECT `order_id`,`order_number`,`order_price`,`order_time`,`order_expire_time`,`order_status`
        ,`order_user_id`,`product_id`,`product_title`,i.`applicant_name`,beibaoi.`applicant_name` recognizee_name
        ,(  SELECT COUNT(1) FROM `happysys_comment`
            WHERE `order_status` = 3 AND `comment_order_id` = o.`order_id`
        ) is_evaluated

        FROM `happysys_order` o
        INNER JOIN `happysys_applicant_info` i ON i.`applicant_id` = o.`order_applicant_id`
        INNER JOIN `happysys_applicant_info` beibaoi ON beibaoi.`applicant_id` = o.`order_recognizee_id`
        INNER JOIN `happysys_product` p ON o.`order_product_id` = p.`product_id`

        <where>
            <if test="conditions.user_id != null and conditions.user_id != ''">
                `order_user_id` = #{conditions.user_id}
            </if>
            <if test="conditions.product_title != null and conditions.product_title != ''">
                AND `product_title` like concat(CONCAT('%',#{conditions.product_title}),'%')
            </if>

            <choose>
                <when test="conditions.order_status != null and conditions.order_status == 3 ">
                    AND `order_status` = 3 AND `order_expire_time` > NOW()
                </when>
                <when test="conditions.order_status != null and conditions.order_status == 4 ">
                    AND `order_expire_time` > NOW() AND DATEDIFF(`order_expire_time`,NOW()) &lt; 30
                </when>
                <when test="conditions.order_status != null and conditions.order_status == 5 ">
                    AND `order_status` = 3 AND `order_expire_time` &lt; NOW()
                </when>
                <when test="conditions.order_status != null and conditions.order_status == 6 ">
                    AND `order_status` = 3 AND `order_id` NOT IN (SELECT `comment_order_id` FROM `happysys_comment` )
                </when>

                <when test="conditions.order_status != null and conditions.order_status != ''">
                    AND `order_status` = #{conditions.order_status}
                </when>

            </choose>



        </where>

        ORDER BY `order_time` DESC
    </select>


    <select id="getOrderByOrderId" resultType="map">
        SELECT `order_id`,`order_number`,`order_price`,`order_face_amount`,`order_time`,`order_expire_time`,`order_status`,`order_applicant_id`
        ,`order_recognizee_id`,`order_user_id`,`product_id`,`product_title`
        FROM `happysys_order` o
        INNER JOIN `happysys_product` p ON o.`order_product_id` = p.`product_id`
        WHERE `order_id` = #{orderId}

    </select>

</mapper>