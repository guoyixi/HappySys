server:
  port: 9001



spring:
  application:
    name: HAPPY-PRODUCT     #微服务名

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://118.25.13.168:3306/happysys?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
    username: root
    password: 856856
    ###################以下为druid增加的配置###########################
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    ###############以上为配置druid添加的配置########################################

  jackson:
    date-format: yyyy-MM-dd
    time-zone: GMT+8

  #mongodb配置
  data:
    mongodb:
      uri: mongodb://test:test@118.25.13.168:27017/test

  main:
    allow-bean-definition-overriding: true

  #redis配置
  redis:
    database: 0
    host: 118.25.13.168
    port: 6379
    password: 856856
    timeout: 20000
    jedis:  #springboot2.x要写jedis
      pool:
        max-active: 8     # 最大活跃连接数，负数为不限制
        max-wait: -1s     # 等待可用连接的最大时间，负数为不限制
        max-idle: 5       # 最大空闲连接数
        min-idle: -1      # 最小空闲连接数


  # rabbitmq配置
  rabbitmq:
    host: 139.196.162.112
    username: guest
    password: guest

  output:
    ansi:
      enabled: never



#mybatisplus配置
mybatis-plus:
  type-aliases-package: com.tj.product
  mapper-locations: classpath*:com/**/*mapper.xml
  configuration:

    use-generated-keys: true
    auto-mapping-behavior: full
    #配置java驼峰命名法和数据库下划线命名规则互转
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.log4j.Log4jImpl
    cache-enabled: false
  global-config:
      db-config:
        id-type: auto
        field-strategy: not_empty
        logic-delete-value: 1 # 逻辑已删除值(默认为 1)
        logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
        #表名、是否使用下划线命名，默认数据库表使用下划线命名
        table-underline: true
        #列名名、是否使用下划线命名，默认数据库列使用下划线命名
        column-underline: true


        #逻辑删除是为了方便数据恢复和保护数据本身价值等等的一种方案，但实际就是删除。
        #如果你需要再查出来就不应使用逻辑删除，而是以一个状态去表示。


eureka:
  client: #客户端注册进eureka服务列表内
    service-url:
      defaultZone: http://localhost:6001/eureka
  instance:
    instance-id: HAPPY-PRODUCT
    prefer-ip-address: true     #访问路径可以显示IP地址
    leaseRenewalIntervalInSeconds: 10  #租期更新时间间隔（默认30秒）
    leaseExpirationDurationInSeconds: 30 #租期到期时间（默认90秒）
feign:
  httpclient:
    connection-timeout: 30000


#该提供者信息
info:
  app.name: xiaoll-microservice
  company.name: www.xiaoll.com
  build.artifactId: ${project.artifactId}
  build.version: ${project.version}


